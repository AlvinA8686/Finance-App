/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.csii.finance_calc;

import java.io.IOException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amin_940155
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     * 
     */
    private ArrayList<Finance> Finances;
    private ArrayList<String> tickers;
    private HashMap<String, Double> Budget;
    public App() {
        initComponents();
        
        Finances = new ArrayList<Finance>();
        Budget = new HashMap<String, Double>();
        tickers = new ArrayList<>(Arrays.asList("AAPL", "GOOGL", "AMZN", "MSFT", "TSLA"));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        app_Panes = new javax.swing.JTabbedPane();
        home_Panel = new javax.swing.JPanel();
        home_Category = new javax.swing.JComboBox<>();
        home_Amount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        home_table = new javax.swing.JTable();
        home_add = new javax.swing.JButton();
        home_Year = new javax.swing.JComboBox<>();
        home_Month = new javax.swing.JComboBox<>();
        home_BudgetAdd = new javax.swing.JToggleButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        home_BudgetTable = new javax.swing.JTable();
        home_BudgetCategory = new javax.swing.JTextField();
        home_BudgetAmount = new javax.swing.JTextField();
        home_Budget = new javax.swing.JTextField();
        home_title = new javax.swing.JTextField();
        table_Panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_table = new javax.swing.JTable();
        table_Desc = new javax.swing.JTextField();
        table_Year = new javax.swing.JTextField();
        table_Month = new javax.swing.JTextField();
        table_Category = new javax.swing.JTextField();
        table_Find = new javax.swing.JButton();
        table_Add = new javax.swing.JButton();
        table_Expense = new javax.swing.JTextField();
        table_Cost = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        graph_Panel = new javax.swing.JPanel();
        Finance_Graph = new GraphicsPanel();
        graph_update = new javax.swing.JButton();
        graph_year = new javax.swing.JTextField();
        graph_month = new javax.swing.JTextField();
        graph_title = new javax.swing.JTextField();
        graph_title1 = new javax.swing.JTextField();
        stocks_Panel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        stocks_Table = new javax.swing.JTable();
        stocks_Update = new javax.swing.JButton();
        stock_title = new javax.swing.JTextField();
        ai_Panel = new javax.swing.JPanel();
        ai_Question = new javax.swing.JTextField();
        stock_title1 = new javax.swing.JTextField();
        ai_Ask = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ai_Answer = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        home_Panel.setBackground(new java.awt.Color(0, 204, 0));

        home_Category.setEditable(true);
        home_Category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", "Auto", "Rent/Housing", "Electric" }));

        home_Amount.setHorizontalAlignment(home_Amount.CENTER);
        home_Amount.setText("Amount");
        home_Amount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                home_AmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                home_AmountFocusLost(evt);
            }
        });

        home_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Amount", "Budget"
            }
        ));
        jScrollPane1.setViewportView(home_table);
        if (home_table.getColumnModel().getColumnCount() > 0) {
            home_table.getColumnModel().getColumn(1).setResizable(false);
        }

        home_add.setText("ADD");
        home_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_addActionPerformed(evt);
            }
        });

        home_Year.setEditable(true);
        home_Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2025", "2026", "2027", "2028" }));
        home_Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_YearActionPerformed(evt);
            }
        });
        home_Year.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                home_YearPropertyChange(evt);
            }
        });

        home_Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        home_Month.setToolTipText("");
        home_Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_MonthActionPerformed(evt);
            }
        });

        home_BudgetAdd.setText("Add");
        home_BudgetAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_BudgetAddActionPerformed(evt);
            }
        });

        home_BudgetTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Budget", "Amount"
            }
        ));
        jScrollPane4.setViewportView(home_BudgetTable);

        home_BudgetCategory.setText("Category");
        home_BudgetCategory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                home_BudgetCategoryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                home_BudgetCategoryFocusLost(evt);
            }
        });

        home_BudgetAmount.setText("Amount");
        home_BudgetAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                home_BudgetAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                home_BudgetAmountFocusLost(evt);
            }
        });

        home_Budget.setEditable(false);

        home_title.setEditable(false);
        home_title.setBackground(new java.awt.Color(0, 204, 0));
        home_title.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        home_title.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        home_title.setText("Your Financial Dashboard");

        javax.swing.GroupLayout home_PanelLayout = new javax.swing.GroupLayout(home_Panel);
        home_Panel.setLayout(home_PanelLayout);
        home_PanelLayout.setHorizontalGroup(
            home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_PanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(home_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(home_PanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(home_title, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(home_add)
                .addGap(154, 154, 154)
                .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(home_PanelLayout.createSequentialGroup()
                        .addComponent(home_BudgetCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(home_BudgetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, home_PanelLayout.createSequentialGroup()
                .addContainerGap(231, Short.MAX_VALUE)
                .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, home_PanelLayout.createSequentialGroup()
                        .addComponent(home_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(home_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108))
                    .addGroup(home_PanelLayout.createSequentialGroup()
                        .addComponent(home_Budget, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)))
                .addComponent(home_BudgetAdd)
                .addGap(85, 85, 85))
        );
        home_PanelLayout.setVerticalGroup(
            home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_PanelLayout.createSequentialGroup()
                .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(home_PanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(home_title, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(home_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(home_PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(home_PanelLayout.createSequentialGroup()
                        .addComponent(home_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(home_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(home_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(home_Budget, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(home_PanelLayout.createSequentialGroup()
                        .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(home_PanelLayout.createSequentialGroup()
                                .addGroup(home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(home_BudgetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(home_BudgetCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, home_PanelLayout.createSequentialGroup()
                                .addComponent(home_add)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(home_BudgetAdd)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        app_Panes.addTab("Home", home_Panel);

        table_Panel.setBackground(new java.awt.Color(0, 204, 0));

        table_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expense", "Cost"
            }
        ));
        jScrollPane2.setViewportView(table_table);

        table_Desc.setEditable(false);

        table_Year.setText("Year");
        table_Year.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                table_YearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                table_YearFocusLost(evt);
            }
        });

        table_Month.setText("Month");
        table_Month.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                table_MonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                table_MonthFocusLost(evt);
            }
        });

        table_Category.setText("Category");
        table_Category.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                table_CategoryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                table_CategoryFocusLost(evt);
            }
        });

        table_Find.setText("Find");
        table_Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                table_FindActionPerformed(evt);
            }
        });

        table_Add.setText("Add");
        table_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                table_AddActionPerformed(evt);
            }
        });

        table_Expense.setText("Expense");
        table_Expense.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                table_ExpenseFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                table_ExpenseFocusLost(evt);
            }
        });

        table_Cost.setText("Cost");
        table_Cost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                table_CostFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                table_CostFocusLost(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 204, 0));
        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Expense Breakdown");

        javax.swing.GroupLayout table_PanelLayout = new javax.swing.GroupLayout(table_Panel);
        table_Panel.setLayout(table_PanelLayout);
        table_PanelLayout.setHorizontalGroup(
            table_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(table_PanelLayout.createSequentialGroup()
                .addGroup(table_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(table_PanelLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(table_Expense, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(table_Cost, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(table_PanelLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(table_Add))
                    .addGroup(table_PanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(table_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(table_PanelLayout.createSequentialGroup()
                                .addComponent(table_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(table_Month, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(table_Find))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(table_Year, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(table_PanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(table_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(table_PanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(table_PanelLayout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(table_Desc, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        table_PanelLayout.setVerticalGroup(
            table_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(table_PanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(table_Find)
                .addGap(18, 18, 18)
                .addGroup(table_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(table_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addGroup(table_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(table_Expense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table_Cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(table_Add)
                .addGap(229, 229, 229))
            .addGroup(table_PanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(table_Desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        app_Panes.addTab("Tables", table_Panel);

        graph_Panel.setBackground(new java.awt.Color(0, 204, 0));

        Finance_Graph.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout Finance_GraphLayout = new javax.swing.GroupLayout(Finance_Graph);
        Finance_Graph.setLayout(Finance_GraphLayout);
        Finance_GraphLayout.setHorizontalGroup(
            Finance_GraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        Finance_GraphLayout.setVerticalGroup(
            Finance_GraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        graph_update.setText("Update");
        graph_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graph_updateActionPerformed(evt);
            }
        });

        graph_year.setText("Year");

        graph_month.setText("month");

        graph_title.setEditable(false);
        graph_title.setBackground(new java.awt.Color(0, 204, 0));
        graph_title.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        graph_title.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        graph_title.setText("Graph");

        graph_title1.setEditable(false);
        graph_title1.setBackground(new java.awt.Color(0, 204, 0));
        graph_title1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        graph_title1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        graph_title1.setText("Find your monthly graph here");
        graph_title1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graph_title1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout graph_PanelLayout = new javax.swing.GroupLayout(graph_Panel);
        graph_Panel.setLayout(graph_PanelLayout);
        graph_PanelLayout.setHorizontalGroup(
            graph_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graph_PanelLayout.createSequentialGroup()
                .addGroup(graph_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(graph_PanelLayout.createSequentialGroup()
                        .addGroup(graph_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(graph_PanelLayout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(graph_update))
                            .addGroup(graph_PanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(graph_year, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(graph_PanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(graph_month, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addComponent(Finance_Graph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(graph_PanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(graph_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graph_PanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(graph_title1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(149, 149, 149))
        );
        graph_PanelLayout.setVerticalGroup(
            graph_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graph_PanelLayout.createSequentialGroup()
                .addGroup(graph_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(graph_PanelLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(graph_title1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Finance_Graph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(graph_PanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(graph_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)
                        .addComponent(graph_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(graph_update)
                        .addGap(3, 3, 3)
                        .addComponent(graph_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(182, Short.MAX_VALUE))
        );

        app_Panes.addTab("Graphs", graph_Panel);

        stocks_Panel.setBackground(new java.awt.Color(0, 204, 0));

        stocks_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ticker/Name", "closing price"
            }
        ));
        jScrollPane3.setViewportView(stocks_Table);

        stocks_Update.setText("Update");
        stocks_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocks_UpdateActionPerformed(evt);
            }
        });

        stock_title.setEditable(false);
        stock_title.setBackground(new java.awt.Color(0, 204, 0));
        stock_title.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        stock_title.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stock_title.setText("Stocks");

        javax.swing.GroupLayout stocks_PanelLayout = new javax.swing.GroupLayout(stocks_Panel);
        stocks_Panel.setLayout(stocks_PanelLayout);
        stocks_PanelLayout.setHorizontalGroup(
            stocks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stocks_PanelLayout.createSequentialGroup()
                .addGroup(stocks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stocks_PanelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(stocks_Update))
                    .addGroup(stocks_PanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(stock_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
        );
        stocks_PanelLayout.setVerticalGroup(
            stocks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stocks_PanelLayout.createSequentialGroup()
                .addGroup(stocks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stocks_PanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(stocks_PanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(stock_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(stocks_Update)))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        app_Panes.addTab("Stocks", stocks_Panel);

        ai_Panel.setBackground(new java.awt.Color(0, 204, 0));

        ai_Question.setText("Type question here");
        ai_Question.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ai_QuestionFocusGained(evt);
            }
        });

        stock_title1.setEditable(false);
        stock_title1.setBackground(new java.awt.Color(0, 204, 0));
        stock_title1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        stock_title1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stock_title1.setText("Financial AI");

        ai_Ask.setText("ask");
        ai_Ask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ai_AskActionPerformed(evt);
            }
        });

        ai_Answer.setBackground(new java.awt.Color(31, 31, 31));
        ai_Answer.setColumns(20);
        ai_Answer.setForeground(new java.awt.Color(240, 240, 240));
        ai_Answer.setLineWrap(true);
        ai_Answer.setRows(5);
        jScrollPane5.setViewportView(ai_Answer);

        javax.swing.GroupLayout ai_PanelLayout = new javax.swing.GroupLayout(ai_Panel);
        ai_Panel.setLayout(ai_PanelLayout);
        ai_PanelLayout.setHorizontalGroup(
            ai_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ai_PanelLayout.createSequentialGroup()
                .addComponent(ai_Question, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ai_Ask, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(ai_PanelLayout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(stock_title1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ai_PanelLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ai_PanelLayout.setVerticalGroup(
            ai_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ai_PanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(stock_title1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(ai_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ai_Ask, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(ai_Question))
                .addGap(206, 206, 206))
        );

        app_Panes.addTab("AI", ai_Panel);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(app_Panes, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(app_Panes, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void home_AmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_home_AmountFocusGained
        // TODO add your handling code here:
        if (home_Amount.getText().equals("Amount")) {
            home_Amount.setText("");
            
        }
    }//GEN-LAST:event_home_AmountFocusGained

    private void home_AmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_home_AmountFocusLost
        // TODO add your handling code here:
        if (home_Amount.getText().equals("")) {
            home_Amount.setText("Amount");
        }
    }//GEN-LAST:event_home_AmountFocusLost

    private void home_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_addActionPerformed
        // TODO add your handling code here:
        if (!home_Amount.getText().equals("") && !home_Amount.getText().equals("Amount") && !home_Category.getSelectedItem().toString().equals("Category") && !home_Category.getSelectedItem().toString().equals(""))
        {
            String category = home_Category.getSelectedItem().toString();
            String year = home_Year.getSelectedItem().toString();
            String month = home_Month.getSelectedItem().toString();
            try {
                double amount = Double.parseDouble(home_Amount.getText());
                boolean found = false;

                for (int i = 0; i < Finances.size(); i++) {
                    if (Finances.get(i).getYear().equals(year) && Finances.get(i).getMonth().equals(month) && Finances.get(i).getCategory().equals(category)) {
                        double currentAmount = Finances.get(i).getAmount();
                        Finances.get(i).setAmount(currentAmount + amount);
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    Finances.add(new Finance(year, month, category, amount));
                }


                for (int i = 0; i < Finances.size(); i++) {
                    System.out.print(Finances.get(i).getYear() + " ");
                    System.out.print(Finances.get(i).getMonth() + " ");
                    System.out.print(Finances.get(i).getCategory() + " ");
                    System.out.println(Finances.get(i).getAmount());
                }
            } catch (NumberFormatException e) {
                // Handle invalid input (if the user doesn't enter a valid number)
                System.out.println("this is not a number");
            }
        
        updateHomeDisplays(year, month);
        ((GraphicsPanel)Finance_Graph).setResults(Finances, year, month);
        }
    }//GEN-LAST:event_home_addActionPerformed

    
    
    
    
    private void home_MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_MonthActionPerformed
        // TODO add your handling code here:
        String year = home_Year.getSelectedItem().toString();
        String month = home_Month.getSelectedItem().toString();
        updateHomeDisplays(year, month);
    }//GEN-LAST:event_home_MonthActionPerformed

    
    
    
    
    private void home_YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_YearActionPerformed
        // TODO add your handling code here:
        String year = home_Year.getSelectedItem().toString();
        String month = home_Month.getSelectedItem().toString();
        updateHomeDisplays(year, month);
    }//GEN-LAST:event_home_YearActionPerformed

    private void home_YearPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_home_YearPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_home_YearPropertyChange

    private void stocks_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocks_UpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) stocks_Table.getModel();
        model.setRowCount(0);
        DataHandler dh = new DataHandler();
        
        for (String ticker : tickers) {
            
                String price = dh.processStocks(ticker);


                if (price != null) {
                    model.addRow(new Object[]{ticker, price});
                }
                //Thread.sleep(1000);
            
            
        }   
    }//GEN-LAST:event_stocks_UpdateActionPerformed

    private void table_FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_table_FindActionPerformed
        // TODO add your handling code here:
        String year = table_Year.getText();
        String month = table_Month.getText();
        String category = table_Category.getText();
                
        
        updateTableDisplays(year, month, category);
        
    }//GEN-LAST:event_table_FindActionPerformed

    private void table_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_table_AddActionPerformed
        // TODO add your handling code here:
        String year = table_Year.getText();
        String month = table_Month.getText();
        String category = table_Category.getText();
        for (int i = 0; i < Finances.size(); i++) {
                    if (Finances.get(i).getYear().equals(year) && Finances.get(i).getMonth().equals(month) && Finances.get(i).getCategory().equals(category)) {
                        Finances.get(i).addExpense(table_Expense.getText(), Double.parseDouble(table_Cost.getText()));
                        System.out.println("added!");
                        break;
                    }
                }
        updateTableDisplays(year, month, category);
    }//GEN-LAST:event_table_AddActionPerformed

    private void table_YearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_YearFocusGained
        // TODO add your handling code here:
        if (table_Year.getText().equals("Year")) {
            table_Year.setText("");
            
        }
    }//GEN-LAST:event_table_YearFocusGained

    private void table_YearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_YearFocusLost
        // TODO add your handling code here:
        if (table_Year.getText().equals("")) {
            table_Year.setText("Year");
        }
    }//GEN-LAST:event_table_YearFocusLost

    private void table_MonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_MonthFocusGained
        // TODO add your handling code here:
        if (table_Month.getText().equals("Month")) {
            table_Month.setText("");
            
        }
    }//GEN-LAST:event_table_MonthFocusGained

    private void table_MonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_MonthFocusLost
        // TODO add your handling code here:
        if (table_Month.getText().equals("")) {
            table_Month.setText("Month");
        }
    }//GEN-LAST:event_table_MonthFocusLost

    private void table_CategoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_CategoryFocusGained
        // TODO add your handling code here:
        if (table_Category.getText().equals("Category")) {
            table_Category.setText("");
            
        }
    }//GEN-LAST:event_table_CategoryFocusGained

    private void table_CategoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_CategoryFocusLost
        // TODO add your handling code here:
        if (table_Category.getText().equals("")) {
            table_Category.setText("Category");
        }
    }//GEN-LAST:event_table_CategoryFocusLost

    private void table_ExpenseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_ExpenseFocusGained
        // TODO add your handling code here:
        if (table_Expense.getText().equals("Expense")) {
            table_Expense.setText("");
            
        }
    }//GEN-LAST:event_table_ExpenseFocusGained

    private void table_ExpenseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_ExpenseFocusLost
        // TODO add your handling code here:
        if (table_Expense.getText().equals("")) {
            table_Expense.setText("Expense");
        }
    }//GEN-LAST:event_table_ExpenseFocusLost

    private void table_CostFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_CostFocusGained
        // TODO add your handling code here:
        if (table_Cost.getText().equals("Cost")) {
            table_Cost.setText("");
            
        }
    }//GEN-LAST:event_table_CostFocusGained

    private void table_CostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table_CostFocusLost
        // TODO add your handling code here:
        if (table_Cost.getText().equals("")) {
            table_Cost.setText("Cost");
        }
    }//GEN-LAST:event_table_CostFocusLost

    private void home_BudgetAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_BudgetAddActionPerformed
        // TODO add your handling code here:
        String Category = home_BudgetCategory.getText();
        Double Amount = Double.parseDouble(home_BudgetAmount.getText());
        Budget.put(Category, Amount);
        updateBudgetDisplays();
        updateHomeDisplays(home_Year.getSelectedItem().toString(), home_Month.getSelectedItem().toString());
        
    }//GEN-LAST:event_home_BudgetAddActionPerformed

    private void home_BudgetCategoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_home_BudgetCategoryFocusGained
        // TODO add your handling code here:
        if (home_BudgetCategory.getText().equals("Category")) {
            home_BudgetCategory.setText("");
            
        }
    }//GEN-LAST:event_home_BudgetCategoryFocusGained

    private void home_BudgetCategoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_home_BudgetCategoryFocusLost
        // TODO add your handling code here:
        if (home_BudgetCategory.getText().equals("")) {
            home_BudgetCategory.setText("Category");
        }
    }//GEN-LAST:event_home_BudgetCategoryFocusLost

    private void home_BudgetAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_home_BudgetAmountFocusGained
        // TODO add your handling code here:
        if (home_BudgetAmount.getText().equals("Amount")) {
            home_BudgetAmount.setText("");
            
        }
    }//GEN-LAST:event_home_BudgetAmountFocusGained

    private void home_BudgetAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_home_BudgetAmountFocusLost
        // TODO add your handling code here:
        if (home_BudgetAmount.getText().equals("")) {
            home_BudgetAmount.setText("Amount");
        }
    }//GEN-LAST:event_home_BudgetAmountFocusLost

    private void graph_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graph_updateActionPerformed
        // TODO add your handling code here:
        ((GraphicsPanel)Finance_Graph).setResults(Finances, graph_year.getText(), graph_month.getText());
    }//GEN-LAST:event_graph_updateActionPerformed

    private void graph_title1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graph_title1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_graph_title1ActionPerformed

    private void ai_AskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ai_AskActionPerformed
        // TODO add your handling code here:
        AIWrapper ai = new AIWrapper();
        String question = ai_Question.getText();
        String answer = "";
        try {
            answer = ai.askQuestion(question);
        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
            answer = "Error: " + e.getMessage();
        }
        ai_Answer.setText(answer);
    }//GEN-LAST:event_ai_AskActionPerformed

    private void ai_QuestionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ai_QuestionFocusGained
        // TODO add your handling code here:
        if (ai_Question.getText().equals("Type question here")) {
            ai_Question.setText("");
            
        }
    }//GEN-LAST:event_ai_QuestionFocusGained
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }
    private void updateHomeDisplays(String year, String month) {
        home_Budget.setText("Budget of " + month + " " + year);
        DefaultTableModel homeTable = (DefaultTableModel) home_table.getModel();
        homeTable.setRowCount(0);

        for (Finance f : Finances) {
            if (f.getYear().equals(year) && f.getMonth().equals(month)) {
                String formattedAmount = formatAmount(f.getAmount());
                if (Budget.containsKey(f.getCategory())){
                    if (Budget.get(f.getCategory()) > f.getAmount()){
                        String[] row = { f.getCategory(), formattedAmount, "Below Budget!" };
                        homeTable.addRow(row);
                    } else if(Budget.get(f.getCategory()) == f.getAmount())  {
                        String[] row = { f.getCategory(), formattedAmount, "On Budget!" };
                        homeTable.addRow(row);
                    } else {
                        String[] row = { f.getCategory(), formattedAmount, "Over Budget!" };
                        homeTable.addRow(row);
                    }
                } else{
                    String[] row = { f.getCategory(), formattedAmount, "No Budget" };
                    homeTable.addRow(row);
                }

            }
        }

        home_table.setModel(homeTable);

    }
    private void updateTableDisplays(String year, String month, String category) {
        DefaultTableModel homeTable = (DefaultTableModel) table_table.getModel();
        homeTable.setRowCount(0);
        
        for (Finance f : Finances) {
            if (f.getYear().equals(year) && f.getMonth().equals(month) && f.getCategory().equals(category)) {
                for (Expense e : f.getExpenses()){
                    String formattedAmount = formatAmount(e.getAmount());
                    String[] row = { e.getDescription(), formattedAmount};
                    homeTable.addRow(row);
                }
            }
        }
        
    }
    private void updateBudgetDisplays() {
        DefaultTableModel homeTable = (DefaultTableModel) home_BudgetTable.getModel();
        homeTable.setRowCount(0);
        
        for (Map.Entry<String, Double> entry : Budget.entrySet()) {
            String key = entry.getKey();
            Double value = entry.getValue();
            String formattedAmount = formatAmount(value);
            String[] row = { key, formattedAmount};
            homeTable.addRow(row);
        }
        
    }
    private String formatAmount(double amount) {
    NumberFormat formatter = NumberFormat.getCurrencyInstance(Locale.US);
    return formatter.format(amount);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Finance_Graph;
    private javax.swing.JTextArea ai_Answer;
    private javax.swing.JButton ai_Ask;
    private javax.swing.JPanel ai_Panel;
    private javax.swing.JTextField ai_Question;
    private javax.swing.JTabbedPane app_Panes;
    private javax.swing.JPanel graph_Panel;
    private javax.swing.JTextField graph_month;
    private javax.swing.JTextField graph_title;
    private javax.swing.JTextField graph_title1;
    private javax.swing.JButton graph_update;
    private javax.swing.JTextField graph_year;
    private javax.swing.JTextField home_Amount;
    private javax.swing.JTextField home_Budget;
    private javax.swing.JToggleButton home_BudgetAdd;
    private javax.swing.JTextField home_BudgetAmount;
    private javax.swing.JTextField home_BudgetCategory;
    private javax.swing.JTable home_BudgetTable;
    private javax.swing.JComboBox<String> home_Category;
    private javax.swing.JComboBox<String> home_Month;
    private javax.swing.JPanel home_Panel;
    private javax.swing.JComboBox<String> home_Year;
    private javax.swing.JButton home_add;
    private javax.swing.JTable home_table;
    private javax.swing.JTextField home_title;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField stock_title;
    private javax.swing.JTextField stock_title1;
    private javax.swing.JPanel stocks_Panel;
    private javax.swing.JTable stocks_Table;
    private javax.swing.JButton stocks_Update;
    private javax.swing.JButton table_Add;
    private javax.swing.JTextField table_Category;
    private javax.swing.JTextField table_Cost;
    private javax.swing.JTextField table_Desc;
    private javax.swing.JTextField table_Expense;
    private javax.swing.JButton table_Find;
    private javax.swing.JTextField table_Month;
    private javax.swing.JPanel table_Panel;
    private javax.swing.JTextField table_Year;
    private javax.swing.JTable table_table;
    // End of variables declaration//GEN-END:variables
}
